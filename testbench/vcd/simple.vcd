$version Generated by VerilatedVcd $end
$date Thu Aug 22 17:22:46 2024
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 8" i_clk $end
  $var wire  1 9" i_rstn $end
  $var wire 32 =" o_riscv_dmem_addr [31:0] $end
  $var wire  4 @" o_riscv_dmem_byte_sel [3:0] $end
  $var wire 32 ?" o_riscv_dmem_rd_data [31:0] $end
  $var wire 32 >" o_riscv_dmem_wr_data [31:0] $end
  $var wire  1 :" o_riscv_dmem_wr_en $end
  $var wire 32 <" o_riscv_imem_instr [31:0] $end
  $var wire 32 ;" o_riscv_imem_pc [31:0] $end
  $scope module riscv_top $end
   $var wire 32 G" REGISTER_INIT [31:0] $end
   $var wire 32 a! ex_alu_result [31:0] $end
   $var wire  1 `! ex_alu_zero $end
   $var wire  1 k ex_ctrl_alu_b_src $end
   $var wire  4 j ex_ctrl_alu_control [3:0] $end
   $var wire  1 h ex_ctrl_branch $end
   $var wire  4 i ex_ctrl_byte_sel [3:0] $end
   $var wire  2 g ex_ctrl_jump [1:0] $end
   $var wire  1 [! ex_ctrl_mem_write $end
   $var wire  1 l ex_ctrl_rd_src $end
   $var wire  1 Z! ex_ctrl_reg_write $end
   $var wire  2 f ex_ctrl_result_src [1:0] $end
   $var wire  1 Y! ex_flush $end
   $var wire 32 J" ex_forward_alu_result [31:0] $end
   $var wire 32 I" ex_forward_rd_data [31:0] $end
   $var wire  3 } ex_funct3 [2:0] $end
   $var wire 32 s ex_imm [31:0] $end
   $var wire 32 q ex_pc [31:0] $end
   $var wire 32 r ex_pc_plus_4 [31:0] $end
   $var wire 32 t ex_pc_plus_imm [31:0] $end
   $var wire  5 \! ex_rd_addr [4:0] $end
   $var wire  5 o ex_rs1_addr [4:0] $end
   $var wire 32 m ex_rs1_data [31:0] $end
   $var wire  5 p ex_rs2_addr [4:0] $end
   $var wire 32 n ex_rs2_data [31:0] $end
   $var wire  2 _! ex_src_pc [1:0] $end
   $var wire 32 b! ex_write_data [31:0] $end
   $var wire  2 ]! forwardAE [1:0] $end
   $var wire  2 ^! forwardBE [1:0] $end
   $var wire  1 8" i_clk $end
   $var wire  1 9" i_rstn $end
   $var wire  1 W! id_ctrl_alu_b_src $end
   $var wire  4 V! id_ctrl_alu_control [3:0] $end
   $var wire  1 T! id_ctrl_branch $end
   $var wire  4 U! id_ctrl_byte_sel [3:0] $end
   $var wire  2 S! id_ctrl_jump [1:0] $end
   $var wire  1 R! id_ctrl_mem_write $end
   $var wire  1 X! id_ctrl_rd_src $end
   $var wire  1 P! id_ctrl_reg_write $end
   $var wire  2 Q! id_ctrl_result_src [1:0] $end
   $var wire  1 J! id_flush $end
   $var wire  3 l! id_funct3 [2:0] $end
   $var wire 32 L! id_imm [31:0] $end
   $var wire 32 K! id_instr [31:0] $end
   $var wire 32 d id_pc [31:0] $end
   $var wire 32 e id_pc_plus_4 [31:0] $end
   $var wire  5 O! id_rd_addr [4:0] $end
   $var wire 32 H" id_rd_data [31:0] $end
   $var wire  5 M! id_rs1_addr [4:0] $end
   $var wire 32 B" id_rs1_data [31:0] $end
   $var wire  5 N! id_rs2_addr [4:0] $end
   $var wire 32 C" id_rs2_data [31:0] $end
   $var wire  1 I! id_stall $end
   $var wire 32 c if_pc_plus_4 [31:0] $end
   $var wire  1 A" if_stall $end
   $var wire 32 f! mem_alu_result [31:0] $end
   $var wire  4 w mem_ctrl_byte_sel [3:0] $end
   $var wire  1 d! mem_ctrl_mem_write $end
   $var wire  1 u mem_ctrl_rd_src $end
   $var wire  1 c! mem_ctrl_reg_write $end
   $var wire  2 v mem_ctrl_result_src [1:0] $end
   $var wire  3 ~ mem_funct3 [2:0] $end
   $var wire 32 x mem_imm [31:0] $end
   $var wire 32 y mem_pc_plus_4 [31:0] $end
   $var wire 32 z mem_pc_plus_imm [31:0] $end
   $var wire  5 e! mem_rd_addr [4:0] $end
   $var wire 32 g! mem_rd_result [31:0] $end
   $var wire 32 h! mem_read_data [31:0] $end
   $var wire 32 { mem_write_data [31:0] $end
   $var wire 32 =" o_riscv_dmem_addr [31:0] $end
   $var wire  4 @" o_riscv_dmem_byte_sel [3:0] $end
   $var wire 32 ?" o_riscv_dmem_rd_data [31:0] $end
   $var wire 32 >" o_riscv_dmem_wr_data [31:0] $end
   $var wire  1 :" o_riscv_dmem_wr_en $end
   $var wire 32 <" o_riscv_imem_instr [31:0] $end
   $var wire 32 ;" o_riscv_imem_pc [31:0] $end
   $var wire 32 N" wb_alu_result [31:0] $end
   $var wire  1 !! wb_ctrl_rd_src $end
   $var wire  1 i! wb_ctrl_reg_write $end
   $var wire  2 K" wb_ctrl_result_src [1:0] $end
   $var wire 32 L" wb_imm [31:0] $end
   $var wire 32 M" wb_pc_plus_4 [31:0] $end
   $var wire  5 j! wb_rd_addr [4:0] $end
   $var wire 32 k! wb_rd_data [31:0] $end
   $var wire 32 "! wb_rd_result [31:0] $end
   $var wire 32 | wb_read_data [31:0] $end
   $scope module u_riscv_ex $end
    $var wire 32 !" alu_a [31:0] $end
    $var wire 32 "" alu_b [31:0] $end
    $var wire  2 ]! i_ForwardAE [1:0] $end
    $var wire  2 ^! i_ForwardBE [1:0] $end
    $var wire  1 8" i_clk $end
    $var wire  1 k i_ex_ctrl_alu_b_src $end
    $var wire  4 j i_ex_ctrl_alu_ctrl [3:0] $end
    $var wire  1 h i_ex_ctrl_branch $end
    $var wire  2 g i_ex_ctrl_jump [1:0] $end
    $var wire 32 g! i_ex_forward_alu_result [31:0] $end
    $var wire 32 k! i_ex_forward_rd_data [31:0] $end
    $var wire  3 } i_ex_funct3 [2:0] $end
    $var wire 32 s i_ex_imm [31:0] $end
    $var wire 32 q i_ex_pc [31:0] $end
    $var wire 32 m i_ex_rs1_data [31:0] $end
    $var wire 32 n i_ex_rs2_data [31:0] $end
    $var wire  1 9" i_rstn $end
    $var wire 64 }! mux_concat_alu_b [63:0] $end
    $var wire 96 w! mux_concat_src_rs1 [95:0] $end
    $var wire 96 z! mux_concat_src_rs2 [95:0] $end
    $var wire 32 a! o_ex_alu_result [31:0] $end
    $var wire  1 `! o_ex_alu_zero $end
    $var wire  2 _! o_ex_ctrl_pc_src [1:0] $end
    $var wire 32 t o_ex_pc_plus_imm [31:0] $end
    $var wire 32 b! o_ex_write_data [31:0] $end
    $var wire 32 b! src_rs2_data [31:0] $end
    $var wire  1 #" take_branch $end
    $scope module u_riscv_adder $end
     $var wire 32 q i_adder_a [31:0] $end
     $var wire 32 s i_adder_b [31:0] $end
     $var wire 32 t o_adder_sum [31:0] $end
    $upscope $end
    $scope module u_riscv_alu $end
     $var wire 32 !" i_alu_a [31:0] $end
     $var wire 32 "" i_alu_b [31:0] $end
     $var wire  4 j i_alu_ctrl [3:0] $end
     $var wire 32 a! o_alu_result [31:0] $end
     $var wire  1 `! o_alu_zero $end
    $upscope $end
    $scope module u_riscv_mux_alu_b $end
     $var wire 32 Q" N_MUX_IN [31:0] $end
     $var wire 64 }! i_mux_concat_data [63:0] $end
     $var wire  1 k i_mux_sel [0:0] $end
     $var wire 32 *" mux_input_arr(0) [31:0] $end
     $var wire 32 +" mux_input_arr(1) [31:0] $end
     $var wire 32 "" o_mux_data [31:0] $end
    $upscope $end
    $scope module u_riscv_mux_rs1 $end
     $var wire 32 O" N_MUX_IN [31:0] $end
     $var wire 96 w! i_mux_concat_data [95:0] $end
     $var wire  2 ]! i_mux_sel [1:0] $end
     $var wire 32 $" mux_input_arr(0) [31:0] $end
     $var wire 32 %" mux_input_arr(1) [31:0] $end
     $var wire 32 &" mux_input_arr(2) [31:0] $end
     $var wire 32 !" o_mux_data [31:0] $end
    $upscope $end
    $scope module u_riscv_mux_rs2 $end
     $var wire 32 O" N_MUX_IN [31:0] $end
     $var wire 96 z! i_mux_concat_data [95:0] $end
     $var wire  2 ^! i_mux_sel [1:0] $end
     $var wire 32 '" mux_input_arr(0) [31:0] $end
     $var wire 32 (" mux_input_arr(1) [31:0] $end
     $var wire 32 )" mux_input_arr(2) [31:0] $end
     $var wire 32 b! o_mux_data [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_riscv_exmem_reg $end
    $var wire  1 8" i_clk $end
    $var wire 32 a! i_ex_alu_result [31:0] $end
    $var wire  4 i i_ex_ctrl_byte_sel [3:0] $end
    $var wire  1 [! i_ex_ctrl_mem_write $end
    $var wire  1 l i_ex_ctrl_rd_src $end
    $var wire  1 Z! i_ex_ctrl_reg_write $end
    $var wire  2 f i_ex_ctrl_result_src [1:0] $end
    $var wire  3 } i_ex_funct3 [2:0] $end
    $var wire 32 s i_ex_imm [31:0] $end
    $var wire 32 r i_ex_pc_plus_4 [31:0] $end
    $var wire 32 t i_ex_pc_plus_imm [31:0] $end
    $var wire  5 \! i_ex_rd_addr [4:0] $end
    $var wire 32 b! i_ex_write_data [31:0] $end
    $var wire  1 9" i_rstn $end
    $var wire 32 f! o_mem_alu_result [31:0] $end
    $var wire  4 w o_mem_ctrl_byte_sel [3:0] $end
    $var wire  1 d! o_mem_ctrl_mem_write $end
    $var wire  1 u o_mem_ctrl_rd_src $end
    $var wire  1 c! o_mem_ctrl_reg_write $end
    $var wire  2 v o_mem_ctrl_result_src [1:0] $end
    $var wire  3 ~ o_mem_funct3 [2:0] $end
    $var wire 32 x o_mem_imm [31:0] $end
    $var wire 32 y o_mem_pc_plus_4 [31:0] $end
    $var wire 32 z o_mem_pc_plus_imm [31:0] $end
    $var wire  5 e! o_mem_rd_addr [4:0] $end
    $var wire 32 { o_mem_write_data [31:0] $end
   $upscope $end
   $scope module u_riscv_hazard_unit $end
    $var wire  1 8" i_clk $end
    $var wire  2 _! i_ex_ctrl_pc_src [1:0] $end
    $var wire  1 l i_ex_ctrl_rd_src $end
    $var wire  5 \! i_ex_rd_addr [4:0] $end
    $var wire  5 o i_ex_rs1_addr [4:0] $end
    $var wire  5 p i_ex_rs2_addr [4:0] $end
    $var wire  5 M! i_id_rs1_addr [4:0] $end
    $var wire  5 N! i_id_rs2_addr [4:0] $end
    $var wire  1 c! i_mem_ctrl_reg_write $end
    $var wire  5 e! i_mem_rd_addr [4:0] $end
    $var wire  1 i! i_wb_ctrl_reg_write $end
    $var wire  5 j! i_wb_rd_addr [4:0] $end
    $var wire  2 ]! o_ForwardAE [1:0] $end
    $var wire  2 ^! o_ForwardBE [1:0] $end
    $var wire  1 Y! o_ex_flush $end
    $var wire  1 J! o_id_flush $end
    $var wire  1 I! o_id_stall $end
    $var wire  1 A" o_if_stall $end
   $upscope $end
   $scope module u_riscv_id $end
    $var wire  1 8" i_clk $end
    $var wire 32 K! i_id_instr [31:0] $end
    $var wire  5 j! i_id_rd_addr [4:0] $end
    $var wire 32 k! i_id_rd_data [31:0] $end
    $var wire  1 i! i_id_wb_reg_write $end
    $var wire  1 9" i_rstn $end
    $var wire  3 t! id_imm_src [2:0] $end
    $var wire  1 W! o_id_ctrl_alu_b_src $end
    $var wire  4 V! o_id_ctrl_alu_control [3:0] $end
    $var wire  1 T! o_id_ctrl_branch $end
    $var wire  4 U! o_id_ctrl_byte_sel [3:0] $end
    $var wire  2 S! o_id_ctrl_jump [1:0] $end
    $var wire  1 R! o_id_ctrl_mem_write $end
    $var wire  1 X! o_id_ctrl_rd_src $end
    $var wire  1 P! o_id_ctrl_reg_write $end
    $var wire  2 Q! o_id_ctrl_result_src [1:0] $end
    $var wire  3 l! o_id_funct3 [2:0] $end
    $var wire 32 L! o_id_imm [31:0] $end
    $var wire  5 O! o_id_rd_addr [4:0] $end
    $var wire  5 M! o_id_rs1_addr [4:0] $end
    $var wire 32 B" o_id_rs1_data [31:0] $end
    $var wire  5 N! o_id_rs2_addr [4:0] $end
    $var wire 32 C" o_id_rs2_data [31:0] $end
    $scope module u_riscv_control_unit_id $end
     $var wire  1 W! alu_b_src $end
     $var wire  4 V! alu_control [3:0] $end
     $var wire  1 T! branch $end
     $var wire  4 U! byte_sel [3:0] $end
     $var wire  3 l! funct3 [2:0] $end
     $var wire  1 v! funct7_5b $end
     $var wire  3 t! imm_src [2:0] $end
     $var wire  2 S! jump [1:0] $end
     $var wire  1 R! memwrite $end
     $var wire  7 u! opcode [6:0] $end
     $var wire  1 X! rd_src $end
     $var wire  1 P! regwrite $end
     $var wire  2 Q! result_src [1:0] $end
    $upscope $end
    $scope module u_riscv_immdecode $end
     $var wire 32 K! i_imm_instr [31:0] $end
     $var wire  3 t! i_imm_scr [2:0] $end
     $var wire 32 L! o_imm_decode [31:0] $end
    $upscope $end
    $scope module u_riscv_register_file $end
     $var wire  1 8" i_clk $end
     $var wire  5 j! i_regfile_rd_addr [4:0] $end
     $var wire 32 k! i_regfile_rd_data [31:0] $end
     $var wire  1 i! i_regfile_rd_wen $end
     $var wire  5 M! i_regfile_rs1_addr [4:0] $end
     $var wire  5 N! i_regfile_rs2_addr [4:0] $end
     $var wire 32 B" o_regfile_rs1_data [31:0] $end
     $var wire 32 C" o_regfile_rs2_data [31:0] $end
     $var wire 32 )! registers(0) [31:0] $end
     $var wire 32 *! registers(1) [31:0] $end
     $var wire 32 3! registers(10) [31:0] $end
     $var wire 32 4! registers(11) [31:0] $end
     $var wire 32 5! registers(12) [31:0] $end
     $var wire 32 6! registers(13) [31:0] $end
     $var wire 32 7! registers(14) [31:0] $end
     $var wire 32 8! registers(15) [31:0] $end
     $var wire 32 9! registers(16) [31:0] $end
     $var wire 32 :! registers(17) [31:0] $end
     $var wire 32 ;! registers(18) [31:0] $end
     $var wire 32 <! registers(19) [31:0] $end
     $var wire 32 +! registers(2) [31:0] $end
     $var wire 32 =! registers(20) [31:0] $end
     $var wire 32 >! registers(21) [31:0] $end
     $var wire 32 ?! registers(22) [31:0] $end
     $var wire 32 @! registers(23) [31:0] $end
     $var wire 32 A! registers(24) [31:0] $end
     $var wire 32 B! registers(25) [31:0] $end
     $var wire 32 C! registers(26) [31:0] $end
     $var wire 32 D! registers(27) [31:0] $end
     $var wire 32 E! registers(28) [31:0] $end
     $var wire 32 F! registers(29) [31:0] $end
     $var wire 32 ,! registers(3) [31:0] $end
     $var wire 32 G! registers(30) [31:0] $end
     $var wire 32 H! registers(31) [31:0] $end
     $var wire 32 -! registers(4) [31:0] $end
     $var wire 32 .! registers(5) [31:0] $end
     $var wire 32 /! registers(6) [31:0] $end
     $var wire 32 0! registers(7) [31:0] $end
     $var wire 32 1! registers(8) [31:0] $end
     $var wire 32 2! registers(9) [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_riscv_idex_reg $end
    $var wire  1 8" i_clk $end
    $var wire  1 Y! i_flushE $end
    $var wire  1 W! i_id_ctrl_alu_b_src $end
    $var wire  4 V! i_id_ctrl_alu_ctrl [3:0] $end
    $var wire  1 T! i_id_ctrl_branch $end
    $var wire  4 U! i_id_ctrl_byte_sel [3:0] $end
    $var wire  2 S! i_id_ctrl_jump [1:0] $end
    $var wire  1 R! i_id_ctrl_mem_write $end
    $var wire  1 X! i_id_ctrl_rd_src $end
    $var wire  1 P! i_id_ctrl_reg_write $end
    $var wire  2 Q! i_id_ctrl_result_src [1:0] $end
    $var wire  3 l! i_id_funct3 [2:0] $end
    $var wire 32 L! i_id_imm [31:0] $end
    $var wire 32 d i_id_pc [31:0] $end
    $var wire 32 e i_id_pc_plus_4 [31:0] $end
    $var wire  5 O! i_id_rd_addr [4:0] $end
    $var wire  5 M! i_id_rs1_addr [4:0] $end
    $var wire 32 B" i_id_rs1_data [31:0] $end
    $var wire  5 N! i_id_rs2_addr [4:0] $end
    $var wire 32 C" i_id_rs2_data [31:0] $end
    $var wire  1 9" i_rstn $end
    $var wire  1 k o_ex_ctrl_alu_b_src $end
    $var wire  4 j o_ex_ctrl_alu_ctrl [3:0] $end
    $var wire  1 h o_ex_ctrl_branch $end
    $var wire  4 i o_ex_ctrl_byte_sel [3:0] $end
    $var wire  2 g o_ex_ctrl_jump [1:0] $end
    $var wire  1 [! o_ex_ctrl_mem_write $end
    $var wire  1 l o_ex_ctrl_rd_src $end
    $var wire  1 Z! o_ex_ctrl_reg_write $end
    $var wire  2 f o_ex_ctrl_result_src [1:0] $end
    $var wire  3 } o_ex_funct3 [2:0] $end
    $var wire 32 s o_ex_imm [31:0] $end
    $var wire 32 q o_ex_pc [31:0] $end
    $var wire 32 r o_ex_pc_plus_4 [31:0] $end
    $var wire  5 \! o_ex_rd_addr [4:0] $end
    $var wire  5 o o_ex_rs1_addr [4:0] $end
    $var wire 32 m o_ex_rs1_data [31:0] $end
    $var wire  5 p o_ex_rs2_addr [4:0] $end
    $var wire 32 n o_ex_rs2_data [31:0] $end
   $upscope $end
   $scope module u_riscv_if $end
    $var wire 32 G" REGISTER_INIT [31:0] $end
    $var wire 32 #! current_pc [31:0] $end
    $var wire  1 8" i_clk $end
    $var wire 32 a! i_if_alu_result [31:0] $end
    $var wire 32 t i_if_pc_plus_imm [31:0] $end
    $var wire  2 _! i_if_src_pc [1:0] $end
    $var wire  1 A" i_if_stall $end
    $var wire  1 9" i_rstn $end
    $var wire 96 m! mux_concat_pc [95:0] $end
    $var wire 32 p! next_pc [31:0] $end
    $var wire 32 <" o_if_instr [31:0] $end
    $var wire 32 ;" o_if_pc [31:0] $end
    $var wire 32 c o_if_pc_plus_4 [31:0] $end
    $var wire 32 c pc_plus_4 [31:0] $end
    $scope module u_riscv_adder $end
     $var wire 32 #! i_adder_a [31:0] $end
     $var wire 32 P" i_adder_b [31:0] $end
     $var wire 32 c o_adder_sum [31:0] $end
    $upscope $end
    $scope module u_riscv_imem $end
     $var wire 1024 # FILE_TEXT_MIF [1023:0] $end
     $var wire  1 8" i_clk $end
     $var wire 14 $! i_imem_addr [13:0] $end
     $var wire 32 <" o_imem_data [31:0] $end
    $upscope $end
    $scope module u_riscv_mux_pc $end
     $var wire 32 O" N_MUX_IN [31:0] $end
     $var wire 96 m! i_mux_concat_data [95:0] $end
     $var wire  2 _! i_mux_sel [1:0] $end
     $var wire 32 q! mux_input_arr(0) [31:0] $end
     $var wire 32 r! mux_input_arr(1) [31:0] $end
     $var wire 32 s! mux_input_arr(2) [31:0] $end
     $var wire 32 p! o_mux_data [31:0] $end
    $upscope $end
    $scope module u_riscv_register $end
     $var wire 32 G" REGISTER_INIT [31:0] $end
     $var wire  1 8" i_clk $end
     $var wire 32 p! i_register_d [31:0] $end
     $var wire  1 D" i_register_en $end
     $var wire  1 9" i_rstn $end
     $var wire 32 #! o_register_q [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_riscv_ifid_reg $end
    $var wire  1 8" i_clk $end
    $var wire  1 J! i_id_flush $end
    $var wire  1 I! i_id_stall $end
    $var wire 32 <" i_if_instr [31:0] $end
    $var wire 32 ;" i_if_pc [31:0] $end
    $var wire 32 c i_if_pc_plus_4 [31:0] $end
    $var wire  1 9" i_rstn $end
    $var wire 32 K! o_id_instr [31:0] $end
    $var wire 32 d o_id_pc [31:0] $end
    $var wire 32 e o_id_pc_plus_4 [31:0] $end
   $upscope $end
   $scope module u_riscv_mem $end
    $var wire 32 f! dmem_addr [31:0] $end
    $var wire  4 -" dmem_byte_sel [3:0] $end
    $var wire  1 d! dmem_mem_write $end
    $var wire 32 E" dmem_rd_data [31:0] $end
    $var wire 32 ," dmem_wr_data [31:0] $end
    $var wire  1 8" i_clk $end
    $var wire 32 f! i_mem_alu_result [31:0] $end
    $var wire  4 w i_mem_ctrl_byte_sel [3:0] $end
    $var wire  1 d! i_mem_ctrl_mem_write $end
    $var wire  2 v i_mem_ctrl_result_src [1:0] $end
    $var wire  3 ~ i_mem_funct3 [2:0] $end
    $var wire 32 x i_mem_imm [31:0] $end
    $var wire 32 y i_mem_pc_plus_4 [31:0] $end
    $var wire 32 z i_mem_pc_plus_imm [31:0] $end
    $var wire 32 { i_mem_write_data [31:0] $end
    $var wire  1 9" i_rstn $end
    $var wire 128 ." mux_concat_src_result [127:0] $end
    $var wire 32 g! o_mem_rd_result [31:0] $end
    $var wire 32 h! o_mem_read_data [31:0] $end
    $scope module u_riscv_dmem $end
     $var wire 1024 C FILE_DATA_MIF [1023:0] $end
     $var wire 32 F" i [31:0] $end
     $var wire  1 8" i_clk $end
     $var wire 14 3" i_dmem_addr [13:0] $end
     $var wire  4 -" i_dmem_byte_sel [3:0] $end
     $var wire 32 ," i_dmem_data [31:0] $end
     $var wire  1 d! i_dmem_wr_en $end
     $var wire 32 E" o_dmem_data [31:0] $end
    $upscope $end
    $scope module u_riscv_dmem_interface $end
     $var wire 32 2" byte_aligned_dmem_rd_data [31:0] $end
     $var wire  1 8" i_clk $end
     $var wire 32 f! i_dmem_intf_addr [31:0] $end
     $var wire  4 w i_dmem_intf_byte_sel [3:0] $end
     $var wire  3 ~ i_dmem_intf_func3 [2:0] $end
     $var wire 32 E" i_dmem_intf_rd_data [31:0] $end
     $var wire 32 { i_dmem_intf_wr_data [31:0] $end
     $var wire  1 d! i_dmem_intf_wr_en $end
     $var wire 32 f! o_dmem_intf_addr [31:0] $end
     $var wire  4 -" o_dmem_intf_byte_sel [3:0] $end
     $var wire 32 h! o_dmem_intf_rd_data [31:0] $end
     $var wire 32 ," o_dmem_intf_wr_data [31:0] $end
     $var wire  1 d! o_dmem_intf_wr_en $end
    $upscope $end
    $scope module u_riscv_mux_rd $end
     $var wire 32 R" N_MUX_IN [31:0] $end
     $var wire 128 ." i_mux_concat_data [127:0] $end
     $var wire  2 v i_mux_sel [1:0] $end
     $var wire 32 4" mux_input_arr(0) [31:0] $end
     $var wire 32 5" mux_input_arr(1) [31:0] $end
     $var wire 32 6" mux_input_arr(2) [31:0] $end
     $var wire 32 7" mux_input_arr(3) [31:0] $end
     $var wire 32 g! o_mux_data [31:0] $end
    $upscope $end
   $upscope $end
   $scope module u_riscv_memwb_reg $end
    $var wire  1 8" i_clk $end
    $var wire  1 u i_mem_ctrl_rd_src $end
    $var wire  1 c! i_mem_ctrl_reg_write $end
    $var wire  5 e! i_mem_rd_addr [4:0] $end
    $var wire 32 g! i_mem_rd_result [31:0] $end
    $var wire 32 h! i_mem_read_data [31:0] $end
    $var wire  1 9" i_rstn $end
    $var wire  1 !! o_wb_ctrl_rd_src $end
    $var wire  1 i! o_wb_ctrl_reg_write $end
    $var wire  5 j! o_wb_rd_addr [4:0] $end
    $var wire 32 "! o_wb_rd_result [31:0] $end
    $var wire 32 | o_wb_read_data [31:0] $end
   $upscope $end
   $scope module u_riscv_wb $end
    $var wire  1 !! i_wb_ctrl_rd_src $end
    $var wire 32 "! i_wb_rd_data [31:0] $end
    $var wire 32 | i_wb_read_data [31:0] $end
    $var wire 64 %! mux_concat_rd [63:0] $end
    $var wire 32 k! o_wb_rd_result [31:0] $end
    $scope module u_riscv_mux_wb $end
     $var wire 32 Q" N_MUX_IN [31:0] $end
     $var wire 64 %! i_mux_concat_data [63:0] $end
     $var wire  1 !! i_mux_sel [0:0] $end
     $var wire 32 '! mux_input_arr(0) [31:0] $end
     $var wire 32 (! mux_input_arr(1) [31:0] $end
     $var wire 32 k! o_mux_data [31:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b
b
b00000000000000000000000000000100 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00 f
b00 g
0h
b0000 i
b0000 j
0k
0l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000 o
b00000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
0u
b00 v
b0000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b000 }
b000 ~
0!!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000 $!
b0000000000000000000000000000000000000000000000000000000000000000 %!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000000000 6!
b00000000000000000000000000000000 7!
b00000000000000000000000000000000 8!
b00000000000000000000000000000000 9!
b00000000000000000000000000000000 :!
b00000000000000000000000000000000 ;!
b00000000000000000000000000000000 <!
b00000000000000000000000000000000 =!
b00000000000000000000000000000000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
b00000000000000000000000000000000 A!
b00000000000000000000000000000000 B!
b00000000000000000000000000000000 C!
b00000000000000000000000000000000 D!
b00000000000000000000000000000000 E!
b00000000000000000000000000000000 F!
b00000000000000000000000000000000 G!
b00000000000000000000000000000000 H!
1I!
0J!
b00000000000000000000000000000000 K!
b00000000000000000000000000000000 L!
b00000 M!
b00000 N!
b00000 O!
1P!
b00 Q!
0R!
b00 S!
0T!
b1111 U!
b0000 V!
1W!
1X!
0Y!
0Z!
0[!
b00000 \!
b00 ]!
b00 ^!
b00 _!
1`!
b00000000000000000000000000000000 a!
b00000000000000000000000000000000 b!
0c!
0d!
b00000 e!
b00000000000000000000000000000000 f!
b00000000000000000000000000000000 g!
b00000000000000000000000000000000 h!
0i!
b00000 j!
b00000000000000000000000000000000 k!
b000 l!
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100 m!
b00000000000000000000000000000100 p!
b00000000000000000000000000000100 q!
b00000000000000000000000000000000 r!
b00000000000000000000000000000000 s!
b111 t!
b0000000 u!
0v!
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 w!
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 z!
b0000000000000000000000000000000000000000000000000000000000000000 }!
b00000000000000000000000000000000 !"
b00000000000000000000000000000000 ""
1#"
b00000000000000000000000000000000 $"
b00000000000000000000000000000000 %"
b00000000000000000000000000000000 &"
b00000000000000000000000000000000 '"
b00000000000000000000000000000000 ("
b00000000000000000000000000000000 )"
b00000000000000000000000000000000 *"
b00000000000000000000000000000000 +"
b00000000000000000000000000000000 ,"
b0000 -"
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ."
b00000000000000000000000000000000 2"
b00000000000000 3"
b00000000000000000000000000000000 4"
b00000000000000000000000000000000 5"
b00000000000000000000000000000000 6"
b00000000000000000000000000000000 7"
18"
09"
0:"
b00000000000000000000000000000000 ;"
b11111111000000000000010100010011 <"
b00000000000000000000000000000000 ="
b00000000000000000000000000000000 >"
b00000000000000000000000000000000 ?"
b0000 @"
1A"
b00000000000000000000000000000000 B"
b00000000000000000000000000000000 C"
0D"
b00000000000000000000000000000000 E"
b00000000000000000000000000000000 F"
b00000000000000000000000000000000 G"
b00000000000000000000000000000000 H"
b00000000000000000000000000000000 I"
b00000000000000000000000000000000 J"
b00 K"
b00000000000000000000000000000000 L"
b00000000000000000000000000000000 M"
b00000000000000000000000000000000 N"
b00000000000000000000000000000011 O"
b00000000000000000000000000000100 P"
b00000000000000000000000000000010 Q"
b00000000000000000000000000000100 R"
#1
08"
#2
18"
#3
08"
#4
18"
#5
08"
#6
18"
#7
08"
#8
18"
#9
08"
#10
18"
#11
08"
19"
#12
b1111 i
1k
1l
0I!
1Z!
18"
0A"
1D"
#13
08"
#14
b00000000000000000000000000001000 c
b00000000000000000000000000000100 e
1u
b1111 w
b00000000000000000000000000000100 #!
b00000000000001 $!
b11111111000000000000010100010011 K!
b11111111111111111111111111110000 L!
b10000 N!
b01010 O!
1c!
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000 m!
b00000000000000000000000000001000 p!
b00000000000000000000000000001000 q!
b001 t!
b0010011 u!
1v!
b1111 -"
18"
b00000000000000000000000000000100 ;"
b00000000000100000000010110010011 <"
#15
08"
#16
b00000000000000000000000000001100 c
b00000000000000000000000000000100 d
b00000000000000000000000000001000 e
b10000 p
b00000000000000000000000000000100 r
b11111111111111111111111111110000 s
b11111111111111111111111111110000 t
1!!
b00000000000000000000000000001000 #!
b00000000000010 $!
b00000000000100000000010110010011 K!
b00000000000000000000000000000001 L!
b00001 N!
b01011 O!
b01010 \!
0`!
b11111111111111111111111111110000 a!
1i!
b111111111111111111111111111100001111111111111111111111111111000000000000000000000000000000001100 m!
b00000000000000000000000000001100 p!
b00000000000000000000000000001100 q!
b11111111111111111111111111110000 r!
b11111111111111111111111111110000 s!
0v!
b1111111111111111111111111111000000000000000000000000000000000000 }!
b11111111111111111111111111110000 ""
0#"
b11111111111111111111111111110000 +"
18"
b00000000000000000000000000001000 ;"
b00000000101101010010000000100011 <"
#17
08"
#18
b00000000000000000000000000010000 c
b00000000000000000000000000001000 d
b00000000000000000000000000001100 e
b00001 p
b00000000000000000000000000000100 q
b00000000000000000000000000001000 r
b00000000000000000000000000000001 s
b00000000000000000000000000000101 t
b11111111111111111111111111110000 x
b00000000000000000000000000000100 y
b11111111111111111111111111110000 z
b00000000000000000000000000001100 #!
b00000000000011 $!
b00000000101101010010000000100011 K!
b00000000000000000000000000000000 L!
b01010 M!
b01011 N!
b00000 O!
0P!
1R!
b01011 \!
b00000000000000000000000000000001 a!
b01010 e!
b11111111111111111111111111110000 f!
b11111111111111111111111111110000 g!
b010 l!
b000000000000000000000000000000010000000000000000000000000000010100000000000000000000000000010000 m!
b00000000000000000000000000010000 p!
b00000000000000000000000000010000 q!
b00000000000000000000000000000101 r!
b00000000000000000000000000000001 s!
b010 t!
b0100011 u!
b111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000 w!
b111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000 z!
b0000000000000000000000000000000100000000000000000000000000000000 }!
b00000000000000000000000000000001 ""
b11111111111111111111111111110000 &"
b11111111111111111111111111110000 )"
b00000000000000000000000000000001 +"
b00000000000000000000000000000100111111111111111111111111111100001111111111111111111111111111000011111111111111111111111111110000 ."
b11111111111100 3"
b11111111111111111111111111110000 4"
b11111111111111111111111111110000 5"
b11111111111111111111111111110000 6"
b00000000000000000000000000000100 7"
18"
b00000000000000000000000000001100 ;"
b11111111010111111111000001101111 <"
b11111111111111111111111111110000 ="
#19
08"
#20
b00000000000000000000000000010100 c
b00000000000000000000000000001100 d
b00000000000000000000000000010000 e
b01010 o
b01011 p
b00000000000000000000000000001000 q
b00000000000000000000000000001100 r
b00000000000000000000000000000000 s
b00000000000000000000000000001000 t
b00000000000000000000000000000001 x
b00000000000000000000000000001000 y
b00000000000000000000000000000101 z
b010 }
b11111111111111111111111111110000 "!
b00000000000000000000000000010000 #!
b00000000000100 $!
b1111111111111111111111111111000000000000000000000000000000000000 %!
b11111111111111111111111111110000 (!
b11111111010111111111000001101111 K!
b11111111111111111111111111110100 L!
b11111 M!
b10101 N!
1P!
b11 Q!
0R!
b01 S!
0Z!
1[!
b00000 \!
b01 ]!
b10 ^!
b11111111111111111111111111110000 a!
b00000000000000000000000000000001 b!
b01011 e!
b00000000000000000000000000000001 f!
b00000000000000000000000000000001 g!
b01010 j!
b11111111111111111111111111110000 k!
b111 l!
b111111111111111111111111111100000000000000000000000000000000100000000000000000000000000000010100 m!
b00000000000000000000000000010100 p!
b00000000000000000000000000010100 q!
b00000000000000000000000000001000 r!
b11111111111111111111111111110000 s!
b100 t!
b1101111 u!
1v!
b000000000000000000000000000000011111111111111111111111111111000000000000000000000000000000000000 w!
b000000000000000000000000000000011111111111111111111111111111000000000000000000000000000000000000 z!
b0000000000000000000000000000000000000000000000000000000000000001 }!
b11111111111111111111111111110000 !"
b00000000000000000000000000000000 ""
b11111111111111111111111111110000 %"
b00000000000000000000000000000001 &"
b11111111111111111111111111110000 ("
b00000000000000000000000000000001 )"
b00000000000000000000000000000001 *"
b00000000000000000000000000000000 +"
b1110 -"
b00000000000000000000000000001000000000000000000000000000000001010000000000000000000000000000000100000000000000000000000000000001 ."
b00000000000000 3"
b00000000000000000000000000000001 4"
b00000000000000000000000000000001 5"
b00000000000000000000000000000101 6"
b00000000000000000000000000001000 7"
18"
b00000000000000000000000000010000 ;"
b00000000000000000000000000000000 <"
b00000000000000000000000000000001 ="
#21
b11111111111111111111111111110000 3!
08"
#22
b00000000000000000000000000011000 c
b00000000000000000000000000010000 d
b00000000000000000000000000010100 e
b11 f
b01 g
b11111 o
b10101 p
b00000000000000000000000000001100 q
b00000000000000000000000000010000 r
b11111111111111111111111111110100 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 x
b00000000000000000000000000001100 y
b00000000000000000000000000001000 z
b00000000000000000000000000000001 {
b111 }
b010 ~
b00000000000000000000000000000001 "!
b00000000000000000000000000010100 #!
b00000000000101 $!
b0000000000000000000000000000000100000000000000000000000000000000 %!
b00000000000000000000000000000001 (!
1J!
b00000000000000000000000000000000 K!
b00000000000000000000000000000000 L!
b00000 M!
b00000 N!
b00 Q!
b00 S!
1Y!
1Z!
0[!
b00 ]!
b00 ^!
b01 _!
b11111111111111111111111111110100 a!
b00000000000000000000000000000000 b!
0c!
1d!
b00000 e!
b11111111111111111111111111110000 f!
b11111111111111111111111111110000 g!
b01011 j!
b00000000000000000000000000000001 k!
b000 l!
b111111111111111111111111111101000000000000000000000000000000000000000000000000000000000000011000 m!
b00000000000000000000000000000000 p!
b00000000000000000000000000011000 q!
b00000000000000000000000000000000 r!
b11111111111111111111111111110100 s!
b111 t!
b0000000 u!
0v!
b111111111111111111111111111100000000000000000000000000000000000100000000000000000000000000000000 w!
b111111111111111111111111111100000000000000000000000000000000000100000000000000000000000000000000 z!
b1111111111111111111111111111010000000000000000000000000000000000 }!
b00000000000000000000000000000000 !"
b11111111111111111111111111110100 ""
b00000000000000000000000000000001 %"
b11111111111111111111111111110000 &"
b00000000000000000000000000000001 ("
b11111111111111111111111111110000 )"
b00000000000000000000000000000000 *"
b11111111111111111111111111110100 +"
b00000000000000000000000000000001 ,"
b1111 -"
b00000000000000000000000000001100000000000000000000000000000010000000000000000000000000000000000011111111111111111111111111110000 ."
b11111111111100 3"
b11111111111111111111111111110000 4"
b00000000000000000000000000000000 5"
b00000000000000000000000000001000 6"
b00000000000000000000000000001100 7"
18"
1:"
b00000000000000000000000000010100 ;"
b11111111111111111111111111110000 ="
b00000000000000000000000000000001 >"
#23
b00000000000000000000000000000001 4!
08"
